dna_string = "TTGTCGTTTAGGTACTGACAGTTGGGGCCTACTGCCCGATCTTGGAGATCCAAACTGCCAAGATGCTCGATCCCCATTATGTTTTCCGTGGGCGTAACTAGACTGACAGATTAGTCTATAGATCATCTTATGTTTGCAGCTCCTGTTCGCGGTCTAAAGCGCGTGCTGTATGCTCTAAAATAGGCCATCACGATAGAAATATGGGGTCCCGAAATTCTCATCGGCGAACTGAAGATCGTTGAAACGATCGATGCCATCTCACTGCTATGGATCCTTTTCCAGTAATGAGTAGATGCGAAGAGTCTCAAGCGAACTAGTCATGGAGCCGCGGTGGTGGCAGTGGCAAACTTCACAACCCTAAGGAAAACAAAATCTCCTCGGCTTCCGGTTACCGGCCTAAGACACAACCCATCAGACTATTTTACAGTATTAATCCCACGCTAATCTGAGAGTCTCTCAGGTGGGATTTCGTAAATTCTATTTACCACAGCTCTTAAATAGGGGACAGATCAAAAACCCAAGACGAGAACGTGGACAGTCTGCACTTTTATGTAGTACATACGAAGTCTGGGCAGGTGGCGCACTTAAACGGGGACCGTGGGAAAGTGGCATCTTAGATGTGGTCTGGGGCACGACACTGATGTCCTGACGACCATGCGCCAGTCCAAAAGCGCTCACACAGTAGACCTCGCATCTTTCAATGCCTTTCGCAGCGTGAAAAACCCTGAATCATGTAGTCACCTGCGCGAGCCTGAGTGGGATCATGTAGTTTTTTCGTTCCTTGACTGGCGTGGTCAAAGGAGGTAGATACACTTCAAAAATGATGCCGCCGCAGGAGGCCCCGTTCAAGGTCACACCTTATTCATCTGCACTTATAGCGGCATCACAGCTC"

def reverse_complement(dna_string):
    '''
    Takes an input list and generates the reverse complement.

    Input Params:
    dna_string: input string

    Output Params:
    revc_string: reverse complement of input string
    '''
    dna_lst = list(dna_string)
    revc_lst = [ ]
    for i in reversed(dna_lst):
        if i == 'A':
            revc_lst.append('T')
        elif i == 'C':
            revc_lst.append('G')
        elif i == 'G':
            revc_lst.append('C')
        elif i == 'T':
            revc_lst.append('A')
        else:
            raise ValueError('Squence with non nucleotide elements detected, please check that only A,C,G and T base pairs are present within the string')
    revc_string = ''.join(revc_lst)
    return revc_string

print(reverse_complement(dna_string))

